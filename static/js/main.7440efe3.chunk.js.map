{"version":3,"sources":["Color.scss","data/belmullet.csv","data/valencia.csv","data/casement.csv","data/cork.csv","data/dublin.csv","data/malinhead.csv","data/mullingar.csv","data/shannon.csv","logo.svg","App.scss","components/chip/Chip.scss","temperature/Temperature.scss","ViewportProvider.js","temperature/TemperatureChart.js","components/chip/Chip.js","temperature/Temperature.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","viewportContext","React","createContext","ViewportProvider","children","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","handleWindowResize","useEffect","addEventListener","removeEventListener","Provider","value","TemperatureChart","memo","props","belmulletData","d3","belmulletTemperatureData","then","data","createObjects","valenciaData","valenciaTemperatureData","casementData","casementTemperatureData","corkData","corkTemperatureData","dublinData","dublinTemperatureData","malinheadData","malinheadTemperatureData","mullingarData","mullingarTemperatureData","shannonData","shannonTemperatureData","useContext","useViewport","draw","station","isFirstRun","useRef","current","_","forIn","displayTemperature","key","setLinePathVisibility","objects","push","date","Date","replace","averageMaxTemperature","averageMinTemperature","get","meanTemperature","highestTemperature","lowestTemperature","drawChart","margin","graphWidth","graphHeight","x","domain","d","range","y","nice","averageMaxTemperatureLine","defined","isNaN","averageMinTemperatureLine","meanTemperatureLine","highestTemperatureLine","lowestTemperatureLine","svg","attr","selectAll","remove","append","call","g","ticks","tickSizeOuter","select","clone","datum","color","maximumcolor","minimumcolor","averagecolor","highestcolor","lowestcolor","className","showLine","path","Chip","selected","toggle","setToggle","clazz","getClasses","onClick","e","preventDefault","style","backgroundColor","Temperature","selectedStation","setSelectedStation","initStations","id","name","belmulletcolor","displayed","valenciacolor","casementcolor","corkcolor","dublincolor","malinheadcolor","mullingarcolor","shannoncolor","initialDisplayTemperature","minimum","maximum","average","highest","lowest","setDisplayTemperature","useReducer","state","action","type","map","stations","dispatch","prevState","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,YAAc,UAAU,eAAiB,UAAU,cAAgB,UAAU,YAAc,UAAU,UAAY,UAAU,cAAgB,UAAU,eAAiB,OAAO,eAAiB,UAAU,aAAe,Y,mBCDtWD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,YAAc,UAAU,eAAiB,UAAU,cAAgB,UAAU,YAAc,UAAU,UAAY,UAAU,cAAgB,UAAU,eAAiB,OAAO,eAAiB,UAAU,aAAe,Y,wCCAtWD,EAAOC,QAAU,CAAC,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,YAAc,UAAU,eAAiB,UAAU,cAAgB,UAAU,YAAc,UAAU,UAAY,UAAU,cAAgB,UAAU,eAAiB,OAAO,eAAiB,UAAU,aAAe,Y,mBCAtWD,EAAOC,QAAU,CAAC,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,aAAe,UAAU,YAAc,UAAU,eAAiB,UAAU,cAAgB,UAAU,YAAc,UAAU,UAAY,UAAU,cAAgB,UAAU,eAAiB,OAAO,eAAiB,UAAU,aAAe,Y,8GCChWC,EAAkBC,IAAMC,cAAc,IAoC7BC,EAlCU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEfH,IAAMI,SAASC,OAAOC,YAFP,mBAElCC,EAFkC,KAE3BC,EAF2B,OAGbR,IAAMI,SAASC,OAAOI,aAHT,mBAGlCC,EAHkC,KAG1BC,EAH0B,KAKnCC,EAAqB,WACzBJ,EAASH,OAAOC,YAChBK,EAAUN,OAAOI,cAWnB,OARAT,IAAMa,WAAU,WAEd,OADAR,OAAOS,iBAAiB,SAAUF,GAC3B,kBAAMP,OAAOU,oBAAoB,SAAUH,MACjD,IAMD,kBAACb,EAAgBiB,SAAjB,CAA0BC,MAAO,CAAEV,QAAOG,WACvCP,I,uLC2PQe,EAhQUlB,IAAMmB,MAAK,SAACC,GAEjC,IAAMC,EAAgBC,IAAOC,KAA0BC,MAAK,SAASC,GACjE,OAAOC,EAAcD,MAEnBE,EAAeL,IAAOM,KAAyBJ,MAAK,SAASC,GAC/D,OAAOC,EAAcD,MAEnBI,EAAeP,IAAOQ,KAAyBN,MAAK,SAASC,GAC/D,OAAOC,EAAcD,MAEnBM,EAAWT,IAAOU,KAAqBR,MAAK,SAASC,GACvD,OAAOC,EAAcD,MAEnBQ,EAAaX,IAAOY,KAAuBV,MAAK,SAASC,GAC3D,OAAOC,EAAcD,MAEnBU,EAAgBb,IAAOc,KAA0BZ,MAAK,SAASC,GACjE,OAAOC,EAAcD,MAEnBY,EAAgBf,IAAOgB,KAA0Bd,MAAK,SAASC,GACjE,OAAOC,EAAcD,MAEnBc,EAAcjB,IAAOkB,KAAwBhB,MAAK,SAASC,GAC7D,OAAOC,EAAcD,MAxBkB,EDYpB,WAAM,MAGLzB,IAAMyC,WAAW1C,GAC3C,MAAO,CAAEQ,MAJsB,EAGvBA,MACQG,OAJe,EAGhBA,QCYagC,GAAlBnC,EA3BmC,EA2BnCA,MAAOG,EA3B4B,EA2B5BA,OAMfG,qBAAU,WACN8B,EAAKvB,EAAMwB,WACZ,CAACxB,EAAMwB,UAEV/B,qBAAU,WACN8B,EAAKvB,EAAMwB,WACZ,CAACrC,EAAOG,IAEX,IAAMmC,EAAaC,kBAAO,GAE1BjC,qBAAU,WACFgC,EAAWE,QACXF,EAAWE,SAAU,EAIzBC,IAAEC,MAAM7B,EAAM8B,oBAAoB,SAACjC,EAAOkC,GACtCC,EAAsB,OAAD,OAAQD,EAAR,gBAA2BlC,QAGrD,CAACG,EAAM8B,qBAEV,IAAMxB,EAAgB,SAACD,GACnB,IAAI4B,EAAU,GAWf,OAVCL,IAAEC,MAAMxB,EAAK,IAAI,SAACR,EAAOkC,GACrBE,EAAQC,KAAK,CACTC,KAAM,IAAIC,KAAKL,EAAIM,QAAQ,IAAK,KAAO,OACvCC,uBAAwBzC,EACxB0C,uBAAwBX,IAAEY,IAAInC,EAAK,GAAI0B,GACvCU,iBAAkBb,IAAEY,IAAInC,EAAK,GAAI0B,GACjCW,oBAAqBd,IAAEY,IAAInC,EAAK,GAAI0B,GACpCY,mBAAoBf,IAAEY,IAAInC,EAAK,GAAI0B,QAGrCE,GAGJV,EAAO,SAACC,GAEV,OAAOA,GACH,IAAK,YACDvB,EAAcG,MAAK,SAAAC,GACfuC,EAAUvC,MAEd,MACJ,IAAK,WACDE,EAAaH,MAAK,SAAAC,GACduC,EAAUvC,MAEd,MACJ,IAAK,WACDI,EAAaL,MAAK,SAAAC,GACduC,EAAUvC,MAEd,MACJ,IAAK,OACDM,EAASP,MAAK,SAAAC,GACVuC,EAAUvC,MAEd,MACJ,IAAK,SACDQ,EAAWT,MAAK,SAAAC,GACZuC,EAAUvC,MAEd,MACJ,IAAK,aACDU,EAAcX,MAAK,SAAAC,GACfuC,EAAUvC,MAEd,MACJ,IAAK,YACDY,EAAcb,MAAK,SAAAC,GACfuC,EAAUvC,MAEd,MACJ,IAAK,UACDc,EAAYf,MAAK,SAAAC,GACbuC,EAAUvC,MAEd,MACJ,QACIJ,EAAcG,MAAK,SAAAC,GACfuC,EAAUvC,QAKpBuC,EAAY,SAACvC,GAEf,IAAMwC,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAa3D,EAAS0D,EACtBE,EAAwD,IAAzCzD,GAAUuD,EAAaA,IAEtCG,EAAI9C,MACL+C,OAAO/C,IAAUG,GAAM,SAAA6C,GAAC,OAAIA,EAAEf,SAC9BgB,MAAM,CAACN,EAAaC,IAEnBM,EAAIlD,MACL+C,OAAO,CAAC/C,IAAOG,GAAM,SAAA6C,GAAC,OAAIA,EAAEP,qBAAoBzC,IAAOG,GAAM,SAAA6C,GAAC,OAAIA,EAAER,wBAAsBW,OAC1FF,MAAM,CAAEJ,EAAcF,EAAgBA,IAErCS,EAA4BpD,MAC7BqD,SAAQ,SAAAL,GAAC,OAAKM,MAAMN,EAAEZ,0BACtBU,GAAE,SAAAE,GAAC,OAAIF,EAAEE,EAAEf,SACXiB,GAAE,SAAAF,GAAC,OAAIE,EAAEF,EAAEZ,0BAEVmB,EAA4BvD,MAC7BqD,SAAQ,SAAAL,GAAC,OAAKM,MAAMN,EAAEX,0BACtBS,GAAE,SAAAE,GAAC,OAAIF,EAAEE,EAAEf,SACXiB,GAAE,SAAAF,GAAC,OAAIE,EAAEF,EAAEX,0BAEVmB,EAAsBxD,MACvBqD,SAAQ,SAAAL,GAAC,OAAKM,MAAMN,EAAET,oBACtBO,GAAE,SAAAE,GAAC,OAAIF,EAAEE,EAAEf,SACXiB,GAAE,SAAAF,GAAC,OAAIE,EAAEF,EAAET,oBAEVkB,EAAyBzD,MAC1BqD,SAAQ,SAAAL,GAAC,OAAKM,MAAMN,EAAER,uBACtBM,GAAE,SAAAE,GAAC,OAAIF,EAAEE,EAAEf,SACXiB,GAAE,SAAAF,GAAC,OAAIE,EAAEF,EAAER,uBAEVkB,EAAwB1D,MACzBqD,SAAQ,SAAAL,GAAC,OAAKM,MAAMN,EAAEP,sBACtBK,GAAE,SAAAE,GAAC,OAAIF,EAAEE,EAAEf,SACXiB,GAAE,SAAAF,GAAC,OAAIE,EAAEF,EAAEP,sBAeZkB,EAAM3D,IAAU,OACf4D,KAAK,UADA,cACkB3E,EADlB,YACoC,GAATG,IAErCuE,EAAIE,UAAU,KAAKC,SAEnBH,EAAII,OAAO,KACNC,MAnBS,SAAAC,GAAC,OAAIA,EACdL,KAAK,YADS,sBACoBf,EAAeF,EADnC,MAEdqB,KAAKhE,IAAc8C,GAAGoB,OAAOtB,EAAaD,GAAgB,IAAIwB,cAAc,OAmBjFR,EAAII,OAAO,KACNC,MAlBS,SAAAC,GAAC,OAAIA,EACdL,KAAK,YADS,oBACiBjB,EADjB,QAEdqB,KAAKhE,IAAYkD,IACjBc,MAAK,SAAAC,GAAC,OAAIA,EAAEG,OAAO,cACnBJ,MAAK,SAAAC,GAAC,OAAIA,EAAEG,OAAO,2BAA2BC,QAC1CT,KAAK,IAAK,GACVA,KAAK,cAAe,SACpBA,KAAK,cAAe,cAa7BD,EAAII,OAAO,QACNO,MAAMnE,GACNyD,KAAK,QAAS,0BACdA,KAAK,OAAQ,QACbA,KAAK,SAAUW,IAAMC,cACrBZ,KAAK,eAAgB,GACrBA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKR,GAEfO,EAAII,OAAO,QACNO,MAAMnE,GACNyD,KAAK,QAAS,0BACdA,KAAK,OAAQ,QACbA,KAAK,SAAUW,IAAME,cACrBb,KAAK,eAAgB,GACrBA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKL,GAEfI,EAAII,OAAO,QACNO,MAAMnE,GACNyD,KAAK,QAAS,0BACdA,KAAK,OAAQ,QACbA,KAAK,SAAUW,IAAMG,cACrBd,KAAK,eAjLK,KAkLVA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKJ,GAEfG,EAAII,OAAO,QACNO,MAAMnE,GACNyD,KAAK,QAAS,0BACdA,KAAK,OAAQ,QACbA,KAAK,SAAUW,IAAMI,cACrBf,KAAK,eAAgB,GACrBA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKH,GAEfE,EAAII,OAAO,QACNO,MAAMnE,GACNyD,KAAK,QAAS,yBACdA,KAAK,OAAQ,QACbA,KAAK,SAAUW,IAAMK,aACrBhB,KAAK,eAAgB,GACrBA,KAAK,kBAAmB,SACxBA,KAAK,iBAAkB,SACvBA,KAAK,IAAKF,IAMb5B,EAAwB,SAAC+C,EAAWC,GAEtC,IAAMC,EAAO/E,IAAU6E,GAEpBC,EACCC,EAAKnB,KAAK,eAnNC,KAqNXmB,EAAKnB,KAAK,eAAgB,IAKlC,OACI,iCCvOOoB,G,MAjCF,SAAClF,GAAW,IAAD,EAEQhB,mBAASgB,EAAMmF,UAFvB,mBAEbC,EAFa,KAELC,EAFK,KAgBpB5F,qBAAU,WACN4F,EAAUrF,EAAMmF,YACjB,CAACnF,EAAMmF,WAYV,OAAQ,yBAAKJ,UAVM,WAEf,IAAIO,EAAQ,UAKZ,OAHGF,IACDE,GAAS,iBAEJA,EAGaC,GAAcC,QA1BlB,SAACC,GACjBA,EAAEC,iBAEE1F,EAAMwF,QACHxF,EAAMwF,WACLH,GAAWD,GAGfC,GAAWD,IAkByCO,MAAO,CAACC,gBAAiB5F,EAAMyE,QAASzE,EAAMjB,YC6D/F8G,G,MAtFK,WAAO,IAAD,EAEwB7G,mBAAS,aAFjC,mBAEf8G,EAFe,KAEEC,EAFF,KAIhBC,EAAe,CACjB,CAAEC,GAAG,EAAGC,KAAM,YAAazB,MAAOA,IAAM0B,eAAgBC,WAAW,GACnE,CAAEH,GAAG,EAAGC,KAAM,WAAYzB,MAAOA,IAAM4B,cAAeD,WAAW,GACjE,CAAEH,GAAG,EAAGC,KAAM,WAAYzB,MAAOA,IAAM6B,cAAeF,WAAW,GACjE,CAAEH,GAAG,EAAGC,KAAM,OAAQzB,MAAOA,IAAM8B,UAAWH,WAAW,GACzD,CAAEH,GAAG,EAAGC,KAAM,SAAUzB,MAAOA,IAAM+B,YAAaJ,WAAW,GAC7D,CAAEH,GAAG,EAAGC,KAAM,aAAczB,MAAOA,IAAMgC,eAAgBL,WAAW,GACpE,CAAEH,GAAG,EAAGC,KAAM,YAAazB,MAAOA,IAAMiC,eAAgBN,WAAW,GACnE,CAAEH,GAAG,EAAGC,KAAM,UAAWzB,MAAOA,IAAMkC,aAAcP,WAAW,IAG7DQ,EAA4B,CAC9BC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,QAAQ,GApBU,EAsB8BjI,mBAAS4H,GAtBvC,mBAsBf9E,EAtBe,KAsBKoF,EAtBL,OAwCOC,sBAhBN,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACb,IAAK,UACH,OAAOF,EAAMG,KAAI,SAAA/F,GAMb,OALG6F,EAAOpB,KAAOzE,EAAQyE,GACrBzE,EAAQ4E,WAAY,EAEpB5E,EAAQ4E,WAAY,EAEjB5E,KAEb,QACE,OAAO4F,KAIyCpB,GAxClC,mBAwCfwB,EAxCe,KAwCLC,EAxCK,KAwDtB,OACI,6BAAS1C,UAAU,eACf,2CACA,yBAAKA,UAAU,eAEXyC,EAASD,KAAI,SAAA/F,GAAO,OAChB,kBAAC,EAAD,CAAMO,IAAKP,EAAQyE,GAAIxB,MAAOjD,EAAQiD,MAAOe,QAAS,kBAhB/CS,EAgBmEzE,EAAQyE,IAf3FuB,EAASvB,GAAIG,YAGhBc,EAAsBN,GACtBb,EAAmByB,EAASvB,GAAIC,MAChCuB,EAAS,CAACxB,GAAIA,EAAIqB,KAAM,aACjB,GAPX,IAAuBrB,GAgBgFd,SAAU3D,EAAQ4E,WAAY5E,EAAQ0E,UAKrI,kBAAC,EAAD,CAAkBpE,mBAAoBA,EAAoBN,QAASsE,IAEnE,yBAAKf,UAAU,4BACX,kBAAC,EAAD,CAAMN,MAAOA,IAAME,aAAca,QAAU,kBAAM0B,GAAsB,SAAAQ,GAAc,OAAO,eAAIA,EAAX,CAAsBb,SAAUa,EAAUb,cAC3H1B,SAAUrD,EAAmB+E,SADjC,WAEA,kBAAC,EAAD,CAAMpC,MAAOA,IAAMC,aAAcc,QAAU,kBAAM0B,GAAsB,SAAAQ,GAAc,OAAO,eAAIA,EAAX,CAAsBZ,SAAUY,EAAUZ,cAC3H3B,SAAUrD,EAAmBgF,SADjC,WAEA,kBAAC,EAAD,CAAMrC,MAAOA,IAAMG,aAAcY,QAAU,kBAAM0B,GAAsB,SAAAQ,GAAc,OAAO,eAAIA,EAAX,CAAsBX,SAAUW,EAAUX,cAC3H5B,SAAUrD,EAAmBiF,SADjC,WAEA,kBAAC,EAAD,CAAMtC,MAAOA,IAAMI,aAAcW,QAAU,kBAAM0B,GAAsB,SAAAQ,GAAc,OAAO,eAAIA,EAAX,CAAsBV,SAAUU,EAAUV,cAC3H7B,SAAUrD,EAAmBkF,SADjC,WAEA,kBAAC,EAAD,CAAMvC,MAAOA,IAAMK,YAAaU,QAAU,kBAAM0B,GAAsB,SAAAQ,GAAc,OAAO,eAAIA,EAAX,CAAsBT,QAASS,EAAUT,aACzH9B,SAAUrD,EAAmBmF,QADjC,cCtEDU,MAbf,WACE,OACE,yBAAK5C,UAAU,OACb,4BAAQA,UAAU,cAChB,8BACA,kDACA,+BAEF,kBAAC,EAAD,QCDc6C,QACW,cAA7B3I,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnI,MAAK,SAAAoI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7440efe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primarycolor\":\"#5E96AE\",\"averagecolor\":\"#F6A7C1\",\"minimumcolor\":\"#87DCC0\",\"maximumcolor\":\"#E6B655\",\"highestcolor\":\"#E17E76\",\"lowestcolor\":\"#8AC0DE\",\"belmulletcolor\":\"#998AD3\",\"valenciacolor\":\"#87DCC0\",\"dublincolor\":\"#88BBE4\",\"corkcolor\":\"#E494D3\",\"casementcolor\":\"#CDF1AF\",\"malinheadcolor\":\"#7d7\",\"mullingarcolor\":\"#FE6B64\",\"shannoncolor\":\"#779ECB\"};","module.exports = __webpack_public_path__ + \"static/media/belmullet.1f2f3830.csv\";","module.exports = __webpack_public_path__ + \"static/media/valencia.d25b375d.csv\";","module.exports = __webpack_public_path__ + \"static/media/casement.5e8894d3.csv\";","module.exports = __webpack_public_path__ + \"static/media/cork.6eccc713.csv\";","module.exports = __webpack_public_path__ + \"static/media/dublin.9946e748.csv\";","module.exports = __webpack_public_path__ + \"static/media/malinhead.6364522e.csv\";","module.exports = __webpack_public_path__ + \"static/media/mullingar.bf22b006.csv\";","module.exports = __webpack_public_path__ + \"static/media/shannon.87652951.csv\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primarycolor\":\"#5E96AE\",\"averagecolor\":\"#F6A7C1\",\"minimumcolor\":\"#87DCC0\",\"maximumcolor\":\"#E6B655\",\"highestcolor\":\"#E17E76\",\"lowestcolor\":\"#8AC0DE\",\"belmulletcolor\":\"#998AD3\",\"valenciacolor\":\"#87DCC0\",\"dublincolor\":\"#88BBE4\",\"corkcolor\":\"#E494D3\",\"casementcolor\":\"#CDF1AF\",\"malinheadcolor\":\"#7d7\",\"mullingarcolor\":\"#FE6B64\",\"shannoncolor\":\"#779ECB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primarycolor\":\"#5E96AE\",\"averagecolor\":\"#F6A7C1\",\"minimumcolor\":\"#87DCC0\",\"maximumcolor\":\"#E6B655\",\"highestcolor\":\"#E17E76\",\"lowestcolor\":\"#8AC0DE\",\"belmulletcolor\":\"#998AD3\",\"valenciacolor\":\"#87DCC0\",\"dublincolor\":\"#88BBE4\",\"corkcolor\":\"#E494D3\",\"casementcolor\":\"#CDF1AF\",\"malinheadcolor\":\"#7d7\",\"mullingarcolor\":\"#FE6B64\",\"shannoncolor\":\"#779ECB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primarycolor\":\"#5E96AE\",\"averagecolor\":\"#F6A7C1\",\"minimumcolor\":\"#87DCC0\",\"maximumcolor\":\"#E6B655\",\"highestcolor\":\"#E17E76\",\"lowestcolor\":\"#8AC0DE\",\"belmulletcolor\":\"#998AD3\",\"valenciacolor\":\"#87DCC0\",\"dublincolor\":\"#88BBE4\",\"corkcolor\":\"#E494D3\",\"casementcolor\":\"#CDF1AF\",\"malinheadcolor\":\"#7d7\",\"mullingarcolor\":\"#FE6B64\",\"shannoncolor\":\"#779ECB\"};","import React from 'react';\r\n\r\nconst viewportContext = React.createContext({});\r\n\r\nconst ViewportProvider = ({ children }) => {\r\n\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n  const [height, setHeight] = React.useState(window.innerHeight);\r\n\r\n  const handleWindowResize = () => {\r\n    setWidth(window.innerWidth);\r\n    setHeight(window.innerHeight);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n\r\n  /* Now we are dealing with a context instead of a Hook, so instead\r\n     of returning the width and height we store the values in the\r\n     value of the Provider */\r\n  return (\r\n    <viewportContext.Provider value={{ width, height }}>\r\n      {children}\r\n    </viewportContext.Provider>\r\n  );\r\n};\r\n\r\n/* Rewrite the \"useViewport\" hook to pull the width and height values\r\n   out of the context instead of calculating them itself */\r\nexport const useViewport = () => {\r\n  /* We can use the \"useContext\" Hook to acccess a context from within\r\n     another Hook, remember, Hooks are composable! */\r\n  const { width, height } = React.useContext(viewportContext);\r\n  return { width, height };\r\n}\r\n\r\nexport default ViewportProvider;","import React, { useEffect, useRef, useCallback, useState } from 'react';\r\n\r\nimport { useViewport } from '../ViewportProvider';\r\n\r\nimport './TemperatureChart.scss';\r\nimport color from '../Color.scss';\r\n\r\nimport * as d3 from 'd3';\r\nimport _ from 'lodash';\r\n\r\nimport belmulletTemperatureData from '../data/belmullet.csv';\r\nimport valenciaTemperatureData from '../data/valencia.csv';\r\nimport casementTemperatureData from '../data/casement.csv';\r\nimport corkTemperatureData from '../data/cork.csv';\r\nimport dublinTemperatureData from '../data/dublin.csv';\r\nimport malinheadTemperatureData from '../data/malinhead.csv';\r\nimport mullingarTemperatureData from '../data/mullingar.csv';\r\nimport shannonTemperatureData from '../data/shannon.csv';\r\n\r\nconst TemperatureChart = React.memo((props) => {\r\n    \r\n    const belmulletData = d3.csv(belmulletTemperatureData).then(function(data) {        \r\n        return createObjects(data);\r\n    });\r\n    const valenciaData = d3.csv(valenciaTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const casementData = d3.csv(casementTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const corkData = d3.csv(corkTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const dublinData = d3.csv(dublinTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const malinheadData = d3.csv(malinheadTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const mullingarData = d3.csv(mullingarTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n    const shannonData = d3.csv(shannonTemperatureData).then(function(data) {\r\n        return createObjects(data);\r\n    });\r\n\r\n    const { width, height } = useViewport(); \r\n\r\n    var svg;\r\n\r\n    const stokeWidth = 1.5;\r\n\r\n    useEffect(() => {\r\n        draw(props.station);\r\n    }, [props.station]);\r\n\r\n    useEffect(() => {\r\n        draw(props.station);            \r\n    }, [width, height])\r\n\r\n    const isFirstRun = useRef(true);\r\n\r\n    useEffect(() => { \r\n        if (isFirstRun.current) {\r\n            isFirstRun.current = false;\r\n            return;\r\n        }     \r\n        \r\n        _.forIn(props.displayTemperature, (value, key) => { \r\n            setLinePathVisibility(`.er-${key}-temperature`, value);\r\n        });\r\n             \r\n    }, [props.displayTemperature]);\r\n\r\n    const createObjects = (data) => {\r\n        var objects = [];\r\n        _.forIn(data[0], (value, key) => {\r\n            objects.push({\r\n                date: new Date(key.replace('M', '-') + '-01'),\r\n                averageMaxTemperature: +value,\r\n                averageMinTemperature: +_.get(data[1], key),  \r\n                meanTemperature: +_.get(data[2], key), \r\n                highestTemperature: +_.get(data[3], key),\r\n                lowestTemperature: +_.get(data[4], key)\r\n            });     \r\n        });\r\n       return objects;\r\n    }\r\n\r\n    const draw = (station) => {\r\n\r\n        switch(station) {\r\n            case 'Belmullet':\r\n                belmulletData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;\r\n            case 'Valencia': \r\n                valenciaData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;\r\n            case 'Casement': \r\n                casementData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;\r\n            case 'Cork': \r\n                corkData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;\r\n            case 'Dublin': \r\n                dublinData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;  \r\n            case 'Malin Head': \r\n                malinheadData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break; \r\n            case 'Mullingar': \r\n                mullingarData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break; \r\n            case 'Shannon': \r\n                shannonData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n                break;                      \r\n            default:    \r\n                belmulletData.then(data => {\r\n                    drawChart(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    const drawChart = (data) => {              \r\n  \r\n        const margin = ({top: 20, right: 30, bottom: 20, left: 30}); \r\n        const graphWidth = width - (margin.right ); \r\n        const graphHeight = (height - (margin.top + margin.bottom)) * 0.6;   \r\n\r\n        const x = d3.scaleUtc()\r\n            .domain(d3.extent(data, d => d.date))\r\n            .range([margin.left, graphWidth]);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain([d3.min(data, d => d.lowestTemperature), d3.max(data, d => d.highestTemperature)]).nice()\r\n            .range([(graphHeight - margin.bottom), margin.top]);    \r\n        \r\n        const averageMaxTemperatureLine = d3.line()\r\n            .defined(d => !isNaN(d.averageMaxTemperature))\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.averageMaxTemperature));\r\n\r\n        const averageMinTemperatureLine = d3.line()\r\n            .defined(d => !isNaN(d.averageMinTemperature))\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.averageMinTemperature));\r\n\r\n        const meanTemperatureLine = d3.line()\r\n            .defined(d => !isNaN(d.meanTemperature))\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.meanTemperature));\r\n\r\n        const highestTemperatureLine = d3.line()\r\n            .defined(d => !isNaN(d.highestTemperature))\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.highestTemperature)); \r\n            \r\n        const lowestTemperatureLine = d3.line()\r\n            .defined(d => !isNaN(d.lowestTemperature))\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.lowestTemperature));     \r\n\r\n        const xAxis = g => g\r\n            .attr(\"transform\", `translate(0,${(graphHeight) - margin.bottom})`)\r\n            .call(d3.axisBottom(x).ticks((graphWidth - margin.right) / 80).tickSizeOuter(0));\r\n\r\n        const yAxis = g => g\r\n            .attr(\"transform\", `translate(${margin.left},0)`)\r\n            .call(d3.axisLeft(y))\r\n            .call(g => g.select(\".domain\"))\r\n            .call(g => g.select(\".tick:last-of-type text\").clone()\r\n                .attr(\"x\", 1)\r\n                .attr(\"text-anchor\", \"start\")\r\n                .attr(\"font-weight\", \"bold\")); \r\n        \r\n        var svg = d3.select(\"svg\")\r\n            .attr(\"viewBox\", `0 0 ${width} ${height * 0.6}`);;\r\n        \r\n        svg.selectAll(\"*\").remove();\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis);\r\n\r\n        svg.append(\"g\")\r\n            .call(yAxis);\r\n\r\n        svg.append(\"path\")            \r\n            .datum(data)\r\n            .attr(\"class\", \"er-maximum-temperature\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", color.maximumcolor)\r\n            .attr(\"stroke-width\", 0)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"d\", averageMaxTemperatureLine);\r\n            \r\n        svg.append(\"path\")\r\n            .datum(data)\r\n            .attr(\"class\", \"er-minimum-temperature\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", color.minimumcolor)\r\n            .attr(\"stroke-width\", 0)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"d\", averageMinTemperatureLine);\r\n\r\n        svg.append(\"path\")\r\n            .datum(data)\r\n            .attr(\"class\", \"er-average-temperature\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", color.averagecolor)\r\n            .attr(\"stroke-width\", stokeWidth)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"d\", meanTemperatureLine); \r\n            \r\n        svg.append(\"path\")\r\n            .datum(data)\r\n            .attr(\"class\", \"er-highest-temperature\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", color.highestcolor)\r\n            .attr(\"stroke-width\", 0)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"d\", highestTemperatureLine);     \r\n\r\n        svg.append(\"path\")\r\n            .datum(data)\r\n            .attr(\"class\", \"er-lowest-temperature\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", color.lowestcolor)\r\n            .attr(\"stroke-width\", 0)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .attr(\"d\", lowestTemperatureLine);\r\n\r\n    }\r\n\r\n\r\n\r\n    const setLinePathVisibility = (className, showLine) => {\r\n\r\n        const path = d3.select(className);\r\n        \r\n        if(showLine) {\r\n            path.attr(\"stroke-width\", stokeWidth);\r\n        } else {\r\n            path.attr(\"stroke-width\", 0.0);            \r\n        }      \r\n            \r\n    }\r\n\r\n    return ( \r\n        <svg>\r\n            \r\n        </svg>\r\n    );\r\n});\r\n \r\nexport default TemperatureChart;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport './Chip.scss';\r\n\r\n\r\nconst Chip = (props) => {\r\n\r\n    const [toggle, setToggle] = useState(props.selected);    \r\n    \r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (props.onClick) {\r\n            if(props.onClick()) {\r\n                setToggle(!toggle);\r\n            }\r\n        } else {\r\n            setToggle(!toggle);\r\n        }       \r\n    }\r\n\r\n    useEffect(() => {\r\n        setToggle(props.selected);\r\n    }, [props.selected])\r\n   \r\n    const getClasses = () => {\r\n        \r\n        let clazz = 'er-chip';\r\n\r\n        if(toggle)\r\n          clazz += \" er-no-shadow\";\r\n\r\n        return clazz; \r\n    }\r\n    \r\n    return (<div className={getClasses()} onClick={handleClick} style={{backgroundColor: props.color}}>{props.children}</div>);\r\n}\r\n \r\nexport default Chip;","import React, {useReducer, useState} from 'react';\r\n\r\nimport TemperatureChart from './TemperatureChart';\r\n\r\nimport color from '../Color.scss';\r\n\r\nimport Chip from '../components/chip/Chip'\r\n\r\nimport './Temperature.scss';\r\n\r\nconst Temperature = () => {\r\n\r\n    const [selectedStation, setSelectedStation] = useState('Belmullet');\r\n\r\n    const initStations = [\r\n        { id:0, name: 'Belmullet', color: color.belmulletcolor, displayed: true },\r\n        { id:1, name: 'Valencia', color: color.valenciacolor, displayed: false },\r\n        { id:2, name: 'Casement', color: color.casementcolor, displayed: false },\r\n        { id:3, name: 'Cork', color: color.corkcolor, displayed: false },\r\n        { id:4, name: 'Dublin', color: color.dublincolor, displayed: false },\r\n        { id:5, name: 'Malin Head', color: color.malinheadcolor, displayed: false },\r\n        { id:6, name: 'Mullingar', color: color.mullingarcolor, displayed: false },\r\n        { id:7, name: 'Shannon', color: color.shannoncolor, displayed: false }\r\n    ]\r\n\r\n    const initialDisplayTemperature = {\r\n        minimum: false,\r\n        maximum: false,\r\n        average: true,\r\n        highest: false,\r\n        lowest: false\r\n    };\r\n    const [displayTemperature, setDisplayTemperature] = useState(initialDisplayTemperature);\r\n\r\n    const stationReducer = (state, action) => {     \r\n        switch (action.type) {\r\n          case 'DISPLAY':\r\n            return state.map(station => {  \r\n                if(action.id === station.id) {\r\n                    station.displayed = true;\r\n                } else {\r\n                    station.displayed = false;\r\n                }           \r\n                return station;           \r\n            });\r\n          default:\r\n            return state;\r\n        }\r\n      };\r\n\r\n    const [stations, dispatch] = useReducer(stationReducer, initStations);    \r\n\r\n    const toggleDisplayTemperature = (whichTemperature) => {        \r\n        setDisplayTemperature(prevState => {return {...prevState, whichTemperature: false}});\r\n    }\r\n\r\n    function switchStation(id) {        \r\n        if(stations[id].displayed) {\r\n            return false;\r\n        }\r\n        setDisplayTemperature(initialDisplayTemperature);\r\n        setSelectedStation(stations[id].name);       \r\n        dispatch({id: id, type: 'DISPLAY'});\r\n        return true;\r\n    }\r\n\r\n    return (  \r\n        <section className=\"temperature\">\r\n            <h2>Temperature</h2>\r\n            <div className=\"er-stations\">\r\n            {\r\n                stations.map(station => (\r\n                    <Chip key={station.id} color={station.color} onClick={() => switchStation(station.id)} selected={station.displayed}>{station.name}</Chip>                   \r\n                ))\r\n            }\r\n            </div>\r\n\r\n            <TemperatureChart displayTemperature={displayTemperature} station={selectedStation}/>\r\n\r\n            <div className=\"er-temperature-selection\">                \r\n                <Chip color={color.minimumcolor} onClick={ () => setDisplayTemperature(prevState => {return {...prevState, minimum: !prevState.minimum}; return true;}) } \r\n                    selected={displayTemperature.minimum}>Minimum</Chip>\r\n                <Chip color={color.maximumcolor} onClick={ () => setDisplayTemperature(prevState => {return {...prevState, maximum: !prevState.maximum}}) } \r\n                    selected={displayTemperature.maximum}>Maximum</Chip>\r\n                <Chip color={color.averagecolor} onClick={ () => setDisplayTemperature(prevState => {return {...prevState, average: !prevState.average}}) } \r\n                    selected={displayTemperature.average}>Average</Chip>\r\n                <Chip color={color.highestcolor} onClick={ () => setDisplayTemperature(prevState => {return {...prevState, highest: !prevState.highest}}) } \r\n                    selected={displayTemperature.highest}>Highest</Chip>\r\n                <Chip color={color.lowestcolor} onClick={ () => setDisplayTemperature(prevState => {return {...prevState, lowest: !prevState.lowest}})  } \r\n                    selected={displayTemperature.lowest}>Lowest</Chip>\r\n            </div> \r\n\r\n        </section>  \r\n    );\r\n}\r\n \r\nexport default Temperature;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport Temperature from './temperature/Temperature';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div></div>\r\n        <div>Ireland in graphs</div>\r\n        <div></div>\r\n      </header>\r\n      <Temperature/>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ViewportProvider from './ViewportProvider';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ViewportProvider>\r\n      <App />\r\n    </ViewportProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}